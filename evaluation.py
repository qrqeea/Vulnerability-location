import sys
import tqdm
import math
from util.io_util import load_pickle, load_json


cve_data_all = load_json('/Volumes/NVD/experiment_data/cve_data_all.json')

filtered_files = load_json('/Volumes/NVD/experiment_data/retrieve/filtered_files.json')
candidates = load_json('/Volumes/NVD/experiment_data/retrieve/candidates.json')         # 1763
rank_list = load_pickle('/Volumes/NVD/experiment_data/location/rank_list.pkl')          # 1763 - 55 = 1708

total_cnt = len(filtered_files) # 6034

one_candidate_cnt = 5375 - len(candidates)      # 只有一个candidate的cve数量, 3612
one_candidate_cnt += 55     # 有55个文件太多，没给大模型排名

def calc_metric(k: int):
    cnt = one_candidate_cnt
    MRR_sum = one_candidate_cnt
    NDCG_sum = one_candidate_cnt
    total_cnt2 = one_candidate_cnt + 659 * k

    # tp = 0
    # for cve, v in filtered_files.items():
    #     ans = cve_data_all[cve]['collected_commit'][2]
    #     for repo, files in v.items():
    #         if ans not in files:
    #             tp += 1
    # print(tp)
    # sys.exit()

    for cve, file_list in rank_list.items():
        ans = cve_data_all[cve]['collected_commit'][2]
        rank = -1
        total_cnt2 += min(k, len(file_list))
        for index, file in enumerate(file_list[:k]):
            if file == ans:
                cnt += 1
                rank = index + 1
                break
        if rank != -1:
            MRR_sum += 1 / rank
            NDCG_sum += 1 / math.log2(rank + 1)
    # print(f'{cnt}/1763')
    print(f'k = {k}:')
    print(f'Recall =', '{:.2f}'.format(cnt / total_cnt), f'({cnt}/{total_cnt})')
    print(f'Precision =', '{:.2f}'.format(cnt / total_cnt2), f'({cnt}/{total_cnt2})')
    print(f'MRR =', '{:.2f}'.format(MRR_sum / total_cnt))
    # print(f'NDCG =', '{:.2f}'.format(NDCG_sum / total_cnt))
    print()


for k in [1, 2, 3, 5]:
    calc_metric(k)