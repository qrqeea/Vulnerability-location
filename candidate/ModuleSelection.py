    # def retrieve_by_module(self, cve_list_done: list):
    #     cve_list_path = f'{self.module_component_dir}/cve_list'
    #     if os.path.exists(f'{cve_list_path}.pkl'):
    #         cve_list = load_pickle(f'{cve_list_path}.pkl')
    #     else:
    #         cve_list = [
    #             cve for cve in self.cve_data_all if
    #             'collected_commit' in self.cve_data_all[cve] and
    #             'components' in self.cve_data_all[cve] and
    #             'Module' in self.cve_data_all[cve]['components'] and
    #             cve not in cve_list_done
    #         ]
    #         save_text(cve_list_path, cve_list)
    #         save_pickle(f'{cve_list_path}.pkl', cve_list)
    #     print(len(cve_list))

    #     cnt = 0
    #     for cve in tqdm.tqdm(cve_list):
    #         # components = self.cve_data_all[cve]['components']['Module']
    #         # f = False
    #         # for component in components:
    #         #     for item in component.split(' '):
    #         #         if any(item in file for file in self.cve_data_all[cve]['file_list']):
    #         #             f = True
    #         # if f:
    #         #     print(cve, components, self.cve_data_all[cve]['file_list'])

    #         f = False
    #         for file in self.cve_data_all[cve]['file_list']:
    #             for item in file.split('/')[:-1]:
    #                 if item.lower() in self.cve_data_all[cve]['original_description'].lower():
    #                     f = True
    #                 if 'complete_description' in self.cve_data_all[cve] and item.lower() in self.cve_data_all[cve]['complete_description'].lower():
    #                     f = True
    #         if f:
    #             cnt += 1
    #     print(cnt)