from tools.datasets_filter import preprocessing_data
from completion.completion import Completion
from repository.RepositoryCollection import RepositoryCollection
from repository.RepositoryClone import RepositoryClone
from commit.CommitCollection import CommitCollection
from extraction.ComponentExtraction import ComponentExtraction

from util import load_pickle


def filter_cve_list():
    # 68565 cve with vulnerable components
    data = load_pickle('/Volumes/NVD/experiment_data/all/combined_vul_component_clean_correct_pure_nvd.pkl')
    a = set(data.keys())

    # 9435 cve (groundtruth data)
    data = load_pickle('/Volumes/NVD/experiment_data/all/cleaned_gt_commit_single_v2.pkl')
    b = set([item[0] for item in data.keys()])
    for item in b.copy():
        if '.' in item:
            b.remove(item)  # 四个重复数据：CVE-2016-9840 - CVE-2016-9843

    # print(len(a))           # 68565
    # print(len(b))           # 9017
    # print(len(a & b))       # 4429
    cve_list = b - a & b      
    # print(len(cve_list))    # 4588
    
    return cve_list


project_root_path = '/Volumes/NVD/experiment_data/datasets'
cve_json_path = '/Volumes/NVD/experiment_data/all/cve_json'
cpe_json_path = '/Volumes/NVD/experiment_data/all/cpe_json'


cve_list = filter_cve_list()
# print(len(cve_list))    # 4588, 包含无效数据

cve_data_all = preprocessing_data(
    cve_list,
    load_pickle('/Volumes/NVD/experiment_data/all/cleaned_gt_commit_single_v2.pkl'),
    project_root_path,
    cve_json_path,
    cpe_json_path
)
cve_list = list(cve_data_all.keys())
# print(len(cve_list))    # 4550

completion = Completion(
    f'{project_root_path}/completion',
    cve_data_all,
    8192,
    16385
)
completion.start()

repositoryCollection = RepositoryCollection(
    '/Volumes/NVD/experiment_data/datasets/repository_collection',
    '/Volumes/NVD/experiment_data/datasets/cve_json',
    cve_list
)
repositoryCollection.start()

commitCollection = CommitCollection(
    f'{project_root_path}/commit',
    cpe_json_path,
    load_pickle(f'{project_root_path}/repository_collection/repo_collection.pkl')
)
commitCollection.start()

repositoryDownload = RepositoryClone(
    f'{project_root_path}/repository_clone',
    load_pickle(f'{project_root_path}/commit/cve_repo_commit.pkl')
)
repositoryDownload.start()

componentExtraction = ComponentExtraction(
    f'{project_root_path}/extraction',
    f'{project_root_path}/completion/completion_result',
    cve_data_all
)
componentExtraction.start()