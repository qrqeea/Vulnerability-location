import os
from ground_truth.GroundTruth import GroundTruth
from dataset.preprocessing_data import preprocessing_data
from scrapy.Scrapy import Scrapy
from completion.completion import Completion
from repository.RepositoryCollection import RepositoryCollection
from repository.RepositoryClone import RepositoryClone
from commit.CommitCollection import CommitCollection
from extraction.ComponentExtraction import ComponentExtraction
from candidate.CandidateSelection import CandidateSelection
from util.io_util import load_pickle, load_json
from codebert.TrainingSet import TrainingSet

project_root_path = '/Volumes/NVD/experiment_data'
os.makedirs(project_root_path, exist_ok = True)

cve_json_path = f'{project_root_path}/cve_json'
cpe_json_path = f'{project_root_path}/cpe_json'

ground_truth = GroundTruth(
    f'{project_root_path}/ground_truth',
    f'{project_root_path}/repo_data',
    load_pickle(f'{project_root_path}/ground_truth/cleaned_gt_commit_single_v2.pkl'),
    load_pickle(f'{project_root_path}/ground_truth/cve_github_can.pkl')
)
ground_truth.start()

cve_data_all = preprocessing_data(
    load_json(f'{project_root_path}/ground_truth/ground_truth.json'),
    project_root_path,
    cve_json_path,
    cpe_json_path
)
# print(len(cve_data_all))    # 8881

# scrapy = Scrapy(
#     project_root_path,
#     f'{project_root_path}/scrapy',
#     cve_data_all
# )
# scrapy.start()

# completion = Completion(
#     project_root_path,
#     f'{project_root_path}/completion',
#     f'{project_root_path}/scrapy/scrapy_result',
#     load_pickle(f'{project_root_path}/cve_data_all.pkl'),
#     16385
# )
# completion.start()

# componentExtraction = ComponentExtraction(
#     project_root_path,
#     f'{project_root_path}/extraction',
#     f'{project_root_path}/completion/completion_result',
#     load_pickle(f'{project_root_path}/cve_data_all.pkl')
# )
# componentExtraction.start()

# repositoryCollection = RepositoryCollection(
#     project_root_path,
#     f"{project_root_path}/repository_collection",
#     f'{project_root_path}/repo_data',
#     load_pickle(f"{project_root_path}/cve_data_all.pkl"),
# )
# repositoryCollection.start()

# commitCollection = CommitCollection(
#     project_root_path,
#     f'{project_root_path}/commit',
#     f'{project_root_path}/repo_data',
#     load_pickle(f'{project_root_path}/cve_data_all.pkl')
# )
# commitCollection.start()

candidateSelection = CandidateSelection(
    project_root_path,
    f'{project_root_path}/candidate',
    f'{project_root_path}/ground_truth/gt_file_content',
    load_pickle(f'{project_root_path}/cve_data_all.pkl'),
    load_pickle(f'{project_root_path}/repo_data/repo_file_list.pkl')
)
candidateSelection.start()

# repositoryClone = RepositoryClone(
#     f'{project_root_path}/repository_clone',
#     f'{project_root_path}/repo_data',
#     load_pickle(f'{project_root_path}/cve_data_all.pkl'),
#     load_pickle(f'{project_root_path}/candidate/codebert/cve_list.pkl')
# )
# repositoryClone.start()

# trainingSet = TrainingSet(
#     f'{project_root_path}/repository_clone',
#     f'{project_root_path}/codebert',
#     f'{project_root_path}/repository_clone/target',
#     f'{project_root_path}/ground_truth/gt_file_content',
#     load_pickle(f'{project_root_path}/cve_data_all.pkl'),
#     load_pickle(f'{project_root_path}/candidate/cve_list/cve_list_codebert.pkl'),
#     load_pickle(f'{project_root_path}/repo_data/repo_file_list.pkl')
# )
# trainingSet.start()