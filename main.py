from tools.datasets_filter import preprocessing_data
from completion.completion import Completion
from repository.RepositoryCollection import RepositoryCollection
from repository.RepositoryClone import RepositoryClone
from commit.CommitCollection import CommitCollection
from extraction.ComponentExtraction import ComponentExtraction
from candidate.CandidateSelection import CandidateSelection

from util import load_pickle


def filter_cve_list():
    # 68565 cve with vulnerable components
    data = load_pickle(
        '/Volumes/NVD/experiment_data/all/combined_vul_component_clean_correct_pure_nvd.pkl'
    )
    a = set(data.keys())

    # 9435 cve (groundtruth data)
    data = load_pickle(
        '/Volumes/NVD/experiment_data/all/cleaned_gt_commit_single_v2.pkl'
    )
    b = set([item[0] for item in data.keys()])
    for item in b.copy():
        if '.' in item:
            b.remove(item)  # 四个重复数据：CVE-2016-9840 - CVE-2016-9843

    # print(len(a))           # 68565
    # print(len(b))           # 9017
    # print(len(a & b))       # 4429
    cve_list = b - a & b
    # print(len(cve_list))    # 4588

    return cve_list


project_root_path = '/Volumes/NVD/experiment_data/datasets'
cve_json_path = '/Volumes/NVD/experiment_data/all/cve_json'
cpe_json_path = '/Volumes/NVD/experiment_data/all/cpe_json'


cve_list = filter_cve_list()
# print(len(cve_list))    # 4588, 包含无效数据

cve_data_all = preprocessing_data(
    cve_list,
    load_pickle('/Volumes/NVD/experiment_data/all/cleaned_gt_commit_single_v2.pkl'),
    project_root_path,
    cve_json_path,
    cpe_json_path,
)
# cve_list = list(cve_data_all.keys())
# print(len(cve_list))    # 4550

completion = Completion(
    project_root_path,
    f'{project_root_path}/completion',
    load_pickle(f'{project_root_path}/cve_data_all.pkl'),
    8192,
    16385
)
completion.start()

repositoryCollection = RepositoryCollection(
    project_root_path,
    f'{project_root_path}/repository_collection',
    load_pickle(f'{project_root_path}/cve_data_all.pkl')
)
repositoryCollection.start()

commitCollection = CommitCollection(
    project_root_path,
    f'{project_root_path}/commit',
    load_pickle(f'{project_root_path}/cve_data_all.pkl')
)
commitCollection.start()

repositoryDownload = RepositoryClone(
    f'{project_root_path}/repository_clone',
    load_pickle(f'{project_root_path}/cve_data_all.pkl')
)
repositoryDownload.start()

componentExtraction = ComponentExtraction(
    project_root_path,
    f'{project_root_path}/extraction',
    f'{project_root_path}/completion/completion_result',
    load_pickle(f'{project_root_path}/cve_data_all.pkl')
)
componentExtraction.start()

# candidateSelection = CandidateSelection(
#     project_root_path,
#     f'{project_root_path}/candidate',
#     load_pickle(f'{project_root_path}/cve_data_all.pkl'),
# )
# candidateSelection.start()
