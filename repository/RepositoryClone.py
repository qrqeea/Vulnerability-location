

import tqdm
import random
from util import *
from common.github_util import *


class RepositoryClone:

    def __init__(self, root_path: str, cve_repo_commit: dict):
        self.root_path = root_path
        self.cve_repo_commit = cve_repo_commit

        self.cloned_repo_dir = f'{self.root_path}/repo_all'
        if not os.path.exists(self.cloned_repo_dir):
            os.mkdir(self.cloned_repo_dir)

        repo_all = set()
        # cves = set()
        for cve, repos in self.cve_repo_commit.items():
            # cves.add(cve)
            for repo_name, sha in repos:
                repo_all.add(repo_name)

        # print(len(repo_all))
        # print(len(cves))
        self.repo_all = repo_all


    def start(self):
        self.clone_all_repo()

    
    def clone_all_repo(self):
        for repo_full_name in tqdm.tqdm(self.repo_all):
            # print(repo_full_name)
            repo_full_name_updated = repo_full_name.replace('/', 'â€”')
            # print(repo_full_name_updated)

            dest_dir = f'{self.cloned_repo_dir}/{repo_full_name_updated}'
            if os.path.exists(dest_dir):
                continue
            # cmd = f'git clone --depth=1 {url}.git {path}/{repo_full_name_updated}'
            cmd = f'git clone --depth=1 git@github.com:{repo_full_name}.git {dest_dir}'
            if os.system(cmd) != 0:
                save_text(f'{self.cloned_repo_dir}/error_list', repo_full_name, 'a')