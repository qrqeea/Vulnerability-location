from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

def generate_prompt(url: str):

    prompt = '''
I will give you some information of a post discussing software vulnerabilities. The information includes these parts: title, content, parameters and post. followed by {Title}, {Content}, {Parameters} and {Posts} respectively. The Parameters part is some parameters of the vulnerability, such as Attack vector, Network Attack complexity, etc. Posts in the content section follow {Post1}, {Post2}, {Post3}, etc. You need to extract the valuable parts from the information. The focus is on the information section describing the vulnerability.\n\n'''[1:]

    driver = webdriver.Chrome()
    driver.get(url)

    element = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.ID, 'meta-container'))
    )

    # content = driver.page_source
    # print(content)

    title = driver.find_element(By.ID, 'title').text
    prompt += '{Title}: ' + title + '\n\n'

    content = driver.find_element(By.ID, 'markdown').text
    prompt += '{Content}:\n' + content + '\n\n'

    parameters = driver.find_element(By.ID, 'meta-container').text
    prompt += '{Parameters}:\n' + parameters + '\n\n'

    posts = driver.find_elements(By.ID, 'message-body')
    print(len(posts))
    index = 1
    for post in posts:
        if post.text != "":
            prompt += '{Post' + f'{index}' + '}:\n' + post.text + '\n'
            index += 1

    driver.quit()

    return prompt


if __name__ == '__main__':
    url = 'https://huntr.com/bounties/b70a6191-8226-4ac6-b817-cae7332a68ee/'
    prompt = generate_prompt(url)
    if prompt != None:
        with open('./prompt_template/prompt_test/huntr.dev', 'w') as f:
            print(prompt, file = f)