import tqdm
from util import *
from common.github_util import *


class CommitCollection:

    def __init__(self, root_path: str, cpe_json_path: str, repo_collection: dict):
        self.root_path = root_path
        self.cpe_json_path = cpe_json_path
        self.repo_collection = repo_collection


    def start(self):
        cve_publiced_date = self.get_cve_publiced_date(f'{self.root_path}/cve_publiced_date')
        
        self.get_commit(cve_publiced_date)


    def get_commit(self, cve_publiced_date: dict):

        def get_commit_sub(cve_list_sub: list, token: str):
            for cve, repos in tqdm.tqdm(cve_list_sub):
                res[cve] = []
                for repo in repos:
                    commit_sha = get_latest_commit_before_date(repo, cve_publiced_date[cve], token)
                    if commit_sha:
                        res[cve].append((repo, commit_sha))
                    else:
                        # TODO
                        pass

            
        res = {}
        multi_thread(list(self.repo_collection.keys()), get_commit_sub, tokens = github_tokens)
        save_text(f'{self.root_path}/cve_repo_commit', res)
        save_pickle(f'{self.root_path}/cve_repo_commit.pkl', res)

    
    def get_cve_publiced_date(self, target_path: str):
        if os.path.exists(target_path):
            return load_pickle(f'{target_path}.pkl')
        
        res = {}
        files = os.listdir(self.cpe_json_path)
        for file in tqdm.tqdm(files):
            if file in ['.DS_Store']:
                continue
            
            fileName = f'{self.cpe_json_path}/{file}'
            with open(fileName, 'r', encoding='utf-8', errors='ignore') as f:
                data = json.load(f)['CVE_Items']
            for cve_dic in data:
                cve_id = cve_dic['cve']['CVE_data_meta']['ID']
                if cve_id not in self.repo_collection: continue
                time = cve_dic.get('publishedDate')
                res[cve_id] = time

        save_text(target_path, res)
        save_pickle(f'{target_path}.pkl', res)
        
        return res


if __name__ == '__main__':
    commitCollection = CommitCollection(
        '/Volumes/NVD/experiment_data/datasets/commit',
        '/Volumes/NVD/experiment_data/all/cpe_json',
        load_pickle('/Volumes/NVD/experiment_data/datasets/repository/repo_collection.pkl')
    )