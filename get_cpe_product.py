import re
import os
import json
import tqdm
from util import save_text, save_pickle, load_pickle


def get_product_from_cpe(s: str):
    s = s.replace('\:', '')
    pattern = r'(?<=:)([^:]+):([^:]+):([^:]+):([^:]+):([^:]+):'
    match = re.search(pattern, s)
    if match:
        return match.group(4)
    else:
        return None


def get_cpe_product(cve_list: list, cpe_json_path: str):
    res = {}
    files = os.listdir(cpe_json_path)
    for file in files:
    # for file in tqdm.tqdm(files):
        if file in ['.DS_Store']:
            continue
        
        # print(f"current file: {file}")
        fileName = f'{cpe_json_path}/{file}'
        with open(fileName, 'r', encoding='utf-8', errors='ignore') as f:
            data = json.load(f)['CVE_Items']
        for cve_dic in data:
            cve_id = cve_dic['cve']['CVE_data_meta']['ID']
            if cve_id not in cve_list: continue

            res[cve_id] = set()
            cpe_list = cve_dic['configurations']['nodes'][0]['cpe_match']
            if not cpe_list:
                # CVE-2021-31810
                # CVE-2014-9390
                # CVE-2022-29526
                cpe_list = cpe_list = cve_dic['configurations']['nodes'][0]['children'][0]['cpe_match']
            for cpe_dic in cpe_list:
                cpe = cpe_dic['cpe23Uri']
                res[cve_id].add(get_product_from_cpe(cpe))
                # res[cve_id].add(cpe)
    return res

if __name__ == '__main__':
    res = get_cpe_product(
        load_pickle('/Volumes/NVD/experiment_data/datasets/cve_list.pkl'),
        '/Volumes/NVD/experiment_data/all/cpe_json'
    )
    save_text('/Volumes/NVD/experiment_data/datasets/repository/cpe_uri', res)
    save_pickle('/Volumes/NVD/experiment_data/datasets/repository/cpe_uri.pkl', res)