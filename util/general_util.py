# 文件名相同
filter_file = [
    'changelog', 'news', 'changes', 'version', 'readme', 'license', 'authors', 'todo', 'history', 'copying', 'relnotes', 'thanks', 'notice', 'whatsnew', 'notes', 'release', 'release_notes', 'testlist', 'testsuite', 'test'
]
# 以这些后缀结尾的文件
filter_suffix = [
    '.md', '.txt', '.docx', '.pdf', '.rst', '.changes', '.rdoc', '.mdown',
    '.command', '.out', '.err', '.stderr', '.stdout', '.test',
    '.jpg', '.png', '.svg', '.mp4', '.gif', '.exr',
    '.csv', '.rdf',
    '.ttf', '.otf', '.woff', '.woff2',
    '.mock', '.stub', '.fake',
    '.pptx', '.key',
    '.bak', '.zip', '.gz', '.rar',
    '.gitignore',
    '.lib', '.jpeg', '.ppt', '.xlsx', '.xls', '.doc', '.ico', '.bmp', '.tar.gz', '.tgz', '.css', '.cygport',
    '.docs', '.wav'
]
# 路径中包含
filter_path = [
    'note', 'license', 'test'
]


def rule_based_filtering(full_file_name: str):
    full_file_name = full_file_name.lower()
    file_name = full_file_name.split('/')[-1]
    file_path = '/'.join(full_file_name.split('/')[:-1])
    if any(file_name == item for item in filter_file):
        return False
    if any(file_name.endswith(suffix) for suffix in filter_suffix):
        return False
    if any(item in file_path for item in filter_path):
        return False
    return True