import sys
import tqdm
import random
from util.io_util import *
from util.github_util import github_tokens, get_file_content, get_file_list

class GroundTruth:

    def __init__(self, module_root_path: str, repo_data_path: str, original_gt: dict, commits_all: dict):
        self.module_root_path = module_root_path
        self.repo_data_path = repo_data_path
        self.original_gt = original_gt
        self.commits_all = commits_all

        os.makedirs(self.module_root_path, exist_ok = True)

        self.gt_file_content_dir = f'{self.module_root_path}/gt_file_content'
        os.makedirs(self.gt_file_content_dir, exist_ok = True)

    
    def start(self):
        cleaned_gt = self.clean_original_gt()
        gt = self.generate_new_gt(cleaned_gt)
        gt = self.manual_update_gt(gt)
        self.get_gt_file(gt)


    def clean_original_gt(self):
        path = f'{self.module_root_path}/cleaned_ground_truth.pkl'
        if os.path.exists(path):
            return load_pickle(path)

        error_cve_list = [
            'CVE-2016-9840.', 'CVE-2016-9841.', 'CVE-2016-9842.', 'CVE-2016-9843.', 'CVE-2013-6488', 'CVE-2022-0177', 'CVE-2022-0227', 'CVE-2022-0329', 'CVE-2015-3208', 'CVE-2009-5146', 'CVE-2017-1000384', 'CVE-2017-0605', 'CVE-2019-15601', 'CVE-2019-10124', 'CVE-2019-1010224', 'CVE-2019-1010222', 'CVE-2019-5428', 'CVE-2021-28421', 'CVE-2020-26159', 'CVE-2018-4700', 'CVE-2018-1000845', 'CVE-2018-19270', 'CVE-2011-1161', 'CVE-2016-1000023', 'CVE-2016-5483', 'CVE-2016-5875', 'CVE-2018-14178', 'CVE-2022-1884', 'CVE-2021-25635', 'CVE-2013-3364', 'CVE-2019-15690', 'CVE-2021-30492', 'CVE-2014-4920', 'CVE-2013-7035', 'CVE-2020-XXXX', 'CVE-2019-17669', 'CVE-2016-1000008', 'CVE-2016-1000273', 'CVE-2014-5244', 'CVE-2016-1000305', 'CVE-2015-3413', 'CVE-2014-6061', 'CVE-2016-1000230'
        ]
        keys = list(self.original_gt.keys())
        for cve, repo in keys:
            if cve in error_cve_list:
                del self.original_gt[cve, repo]

        key = ('CVE-2019-17669 ', 'WordPress/WordPress')
        self.original_gt[('CVE-2019-17669', 'WordPress/WordPress')] = self.original_gt[key]
        del self.original_gt[key]

        print(len(self.original_gt))    # 9390
        cve_list = {cve for cve, _ in self.original_gt}
        print(len(cve_list))    # 8978

        save_pickle(path, self.original_gt)
        return self.original_gt
    

    def generate_new_gt(self, cleaned_gt: dict):
        path = f'{self.module_root_path}/ground_truth'
        if os.path.exists(f'{path}.json'):
            return load_json(f'{path}.json')

        res = {}
        for (cve, repo), file in cleaned_gt.items():
            if cve not in res:
                res[cve] = {}
            if 'vulnerability_files' not in res[cve]:
                res[cve]['vulnerability_files'] = {}
            res[cve]['vulnerability_files'][repo] = list(file)
            
            if 'commits' not in res[cve]:
                commits = set()
                for _, v in self.commits_all[cve].items():
                    commits |= v
                res[cve]['commits'] = list(commits)

        save_json(f'{path}.json', res)
        save_pickle(f'{path}.pkl', res)
        return res


    def manual_update_gt(self, gt: dict):
        path = f'{self.module_root_path}/ground_truth'
        if os.path.exists(f'{path}.json'):
            return load_json(f'{path}.json')
        
        print(f'start update gt')
        # 添加一部分commit，便于找到gt文件内容
        gt['CVE-2018-17552']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/f882c3aec2bbd15e7952dd7b133bcef947c46dd5')
        
        gt['CVE-2021-45861']['commits'].append('https://github.com/justdan96/tsMuxer/commit/5b8fdee725f8b4b2f8c5dd23da6bc1c05ee7a8f9')
        
        gt['CVE-2022-26980']['commits'].append('https://github.com/nilsteampassnet/TeamPass/commit/208ee63fbe757a778e1e8d0142864af30b357352')
        
        gt['CVE-2020-36277']['commits'].append('https://github.com/DanBloomberg/leptonica/commit/ac66835e9685a18231f0808d63fdc015a0efdc25')
        gt['CVE-2020-36277']['commits'].append('https://github.com/DanBloomberg/leptonica/commit/36f93b71ed0debf9c99f7967579fe851085084f0')
        
        gt['CVE-2019-11683']['commits'].append('https://github.com/torvalds/linux/commit/575b65bc5bff37ec502d5eab9fc91d0a8d5ec40e')
        
        gt['CVE-2019-14345']['commits'].append('https://github.com/tematres/TemaTres-Vocabulary-Server/commit/5e6c56147f736701755cc0de4a683e5f9b736ddc')
        
        gt['CVE-2019-8980']['commits'].append('https://github.com/torvalds/linux/commit/f612acfae86af7ecad754ae6a46019be9da05b8e')
        gt['CVE-2019-8980']['commits'].remove('https://github.com/krasCGQ/linux-vk/commit/f612acfae86af7ecad754ae6a46019be9da05b8e')
        
        gt['CVE-2019-12381']['commits'].append('https://github.com/torvalds/linux/commit/425aa0e1d01513437668fa3d4a971168bbaa8515')
        gt['CVE-2019-12381']['commits'].remove('https://github.com/krasCGQ/linux-vk/commit/425aa0e1d01513437668fa3d4a971168bbaa8515')
        
        gt['CVE-2022-34876']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/794ce923ad4e8033b747272090289894797b2831')
        gt['CVE-2022-34877']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/794ce923ad4e8033b747272090289894797b2831')
        gt['CVE-2022-34878']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/794ce923ad4e8033b747272090289894797b2831')

        gt['CVE-2017-14705']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/ee969ae8e579bfeba3508ef3db22144b3ad6bcfe')
        gt['CVE-2017-14706']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/ee969ae8e579bfeba3508ef3db22144b3ad6bcfe')

        gt['CVE-2018-14028']['commits'].append('https://github.com/rastating/wordpress-exploit-framework/commit/19e3493522b434b09b5f2525792370482cdadea4')

        gt['CVE-2022-23837']['commits'].append('https://github.com/sidekiq/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956')
        gt['CVE-2022-23837']['commits'].remove('https://github.com/mperham/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956')
        gt['CVE-2022-23837']['commits'].remove('github.com/mperham/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956')

        gt['CVE-2020-7773']['commits'].append('https://github.com/valeriangalliat/markdown-it-highlightjs/commit/4f7b1c74eee7ac6ebe05f2e7a00c49232d86677e')

        gt['CVE-2021-37617']['commits'].append('https://github.com/nextcloud/desktop/commit/860514f01bcd3ef02b09e0e36e423d45a7dcfc93')

        gt['CVE-2020-14000']['commits'].append('https://github.com/scratchfoundation/scratch-vm/commit/90b9da45f4084958535338d1c4d71a22d6136aab')

        gt['CVE-2014-3868']['commits'].append('https://github.com/ZeusCart/zeuscart/commit/fa919a5e4887a7d348166eac4f10b041684208ca')

        gt['CVE-2021-3007']['commits'].append('https://github.com/laminas/laminas-http/commit/eab608e10896270416aae7ffce36cc48072aa796')

        gt['CVE-2017-7698']['commits'].append('https://github.com/matthiaskramm/swftools/commit/54ea46ce09ab2be15901240bf233845c92bf04af')

        gt['CVE-2018-14658']['commits'].append('https://github.com/keycloak/keycloak/commit/a957e118e6efb35fe7ef3a62acd66341a6523cb7')
        
        gt['CVE-2020-7351']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/18ebf5efa6a5857f0f09487400b9f607ee97b599')

        gt['CVE-2017-17560']['commits'].append('https://github.com/rapid7/metasploit-framework/commit/d174ef3a7055d8d2ba2b809c14722dcbffa2510d')

        # 删除一些CVE，原因包括gt commit失效等
        del gt['CVE-2018-21021']
        del gt['CVE-2018-7589']
        del gt['CVE-2018-10813']
        del gt['CVE-2017-6213']
        del gt['CVE-2018-11587']
        del gt['CVE-2018-20200']
        del gt['CVE-2019-10051']
        del gt['CVE-2021-37157']
        del gt['CVE-2019-3846']
        del gt['CVE-2017-5336']
        del gt['CVE-2020-15801']
        del gt['CVE-2019-14802']
        del gt['CVE-2020-8933']
        del gt['CVE-2017-5335']
        del gt['CVE-2020-27642']
        del gt['CVE-2020-8907']
        del gt['CVE-2022-22294']
        del gt['CVE-2018-21022']
        del gt['CVE-2019-15298']
        del gt['CVE-2020-21054']
        del gt['CVE-2020-35514']
        del gt['CVE-2021-41188']
        del gt['CVE-2015-1560']
        del gt['CVE-2015-1561']
        del gt['CVE-2018-21020']
        del gt['CVE-2019-13024']
        del gt['CVE-2019-17106']
        del gt['CVE-2019-17107']
        del gt['CVE-2019-17108']
        del gt['CVE-2019-17105']
        del gt['CVE-2019-8912']
        del gt['CVE-2020-13252']
        del gt['CVE-2021-37556']
        del gt['CVE-2021-37557']
        del gt['CVE-2018-17198']
        del gt['CVE-2019-10670']
        del gt['CVE-2018-17553']
        del gt['CVE-2010-2247']
        del gt['CVE-2017-6441']
        del gt['CVE-2019-14343']
        del gt['CVE-2019-14344']
        del gt['CVE-2021-26601']
        del gt['CVE-2018-7890']
        del gt['CVE-2021-45385']
        del gt['CVE-2018-7562']
        del gt['CVE-2018-10966']
        del gt['CVE-2021-22571']
        del gt['CVE-2015-4645']
        del gt['CVE-2018-7563']
        del gt['CVE-2019-8956']
        del gt['CVE-2019-9857']
        del gt['CVE-2014-6287']
        del gt['CVE-2020-12725']
        del gt['CVE-2019-12615']
        del gt['CVE-2019-2101']
        del gt['CVE-2017-9070']
        del gt['CVE-2018-1000537']
        del gt['CVE-2020-13622']
        del gt['CVE-2019-12378']
        del gt['CVE-2019-12995']
        del gt['CVE-2022-28048']
        del gt['CVE-2021-43820']
        del gt['CVE-2021-22557']
        del gt['CVE-2019-16965']
        del gt['CVE-2018-7588']

        # 更新漏洞文件
        gt['CVE-2020-36277']['vulnerability_files']['DanBloomberg/leptonica'] = ['src/pixconv.c']
        
        del gt['CVE-2022-24832']['vulnerability_files']['gocd/gocd']
        gt['CVE-2022-24832']['vulnerability_files']['gocd/gocd-ldap-authentication-plugin'] = [
            'src/main/java/cd/go/apacheds/ApacheDsLdapClient.java',
            'src/main/java/cd/go/authentication/ldap/LdapClient.java',
            'src/main/java/cd/go/framework/ldap/JNDILdapClient.java',
            'src/test/java/cd/go/apacheds/ApacheDsLdapClientTest.java'
        ]
        
        del gt['CVE-2018-14362']['vulnerability_files']['muttmua/mutt']
        gt['CVE-2018-14362']['vulnerability_files']['neomutt/neomutt'] = ['newsrc.c', 'pop.c']
        
        del gt['CVE-2019-8980']['vulnerability_files']['krasCGQ/linux-vk']
        gt['CVE-2019-8980']['vulnerability_files']['torvalds/linux'] = ['fs/exec.c']
        
        del gt['CVE-2019-12381']['vulnerability_files']['krasCGQ/linux-vk']
        gt['CVE-2019-12381']['vulnerability_files']['torvalds/linux'] = ['net/ipv4/ip_sockglue.c']
        
        del gt['CVE-2022-23837']['vulnerability_files']['rubysec/ruby-advisory-db']
        gt['CVE-2022-23837']['vulnerability_files']['sidekiq/sidekiq'] = ['lib/sidekiq/web/application.rb', 'lib/sidekiq/web/application.rb']

        del gt['CVE-2020-14000']['vulnerability_files']['LLK/scratch-vm']
        gt['CVE-2020-14000']['vulnerability_files']['scratchfoundation/scratch-vm'] = ['src/serialization/sb3.js']
        
        del gt['CVE-2018-14658']['vulnerability_files']['TomMD/keycloak-keycloak']
        gt['CVE-2018-14658']['vulnerability_files']['keycloak/keycloak'] = ['services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java']

        del gt['CVE-2019-11683']['vulnerability_files']['krasCGQ/linux-vk']
        gt['CVE-2019-11683']['vulnerability_files']['torvalds/linux'] = ['net/ipv4/udp_offload.c']

        print(f'end update gt, size: {len(gt)}')

        save_json(f'{path}.json', gt)
        save_pickle(f'{path}.pkl', gt)
        return gt

    def get_gt_file(self, gt: dict):
        to_scrapy_list = set()
        for cve, v in gt.items():
            for repo, files in v['vulnerability_files'].items():
                for url in v['commits']:
                    if f'github.com/{repo}/commit/' not in url:
                        continue
                    sha = url[url.find('/commit/') + 8:]
                    to_scrapy_list |= {(cve, repo, file, sha) for file in files}
        save_text(f'{self.module_root_path}/gt_content_to_scrapy_list', to_scrapy_list)
        print(f'to_scrapy_list size: {len(to_scrapy_list)}')
         
        def get_gt_file_sub(to_scrapy_list_sub: list, token: str):
            for (cve, repo, file, sha) in tqdm.tqdm(to_scrapy_list_sub):
                dir = f'{self.gt_file_content_dir}/{cve}'
                tp1 = repo.replace('/', '-')
                tp2 = file.replace('/', '-')
                save_path = f'{dir}/{tp1}_{tp2}'
                if os.path.exists(save_path):
                    continue
                res = get_file_content(repo, sha, file, token)
                if res:
                    os.makedirs(dir, exist_ok = True)
                    save_text(save_path, res)
                else:
                    # 没爬到文件的一个原因是大小写问题
                    if repo not in repo_file_list:
                        repo_file_list[repo] = {}
                    if sha not in repo_file_list:
                        repo_file_list[repo][sha] = get_file_list(repo, sha, token)
                    file_list = repo_file_list[repo][sha]
                    for file2, _ in file_list:
                        if file.lower() == file2.lower():
                            res = get_file_content(repo, sha, file2, token)
                            if res:
                                os.makedirs(dir, exist_ok = True)
                                save_text(save_path, res)
                            break
        # get_gt_file_sub(
        #     [(
        #         'CVE-2019-8424',
        #         'ZoneMinder/zoneminder',
        #         'web/ajax/status.php',
        #         '02fd1e79b3bfa5b2e2087cb1255f9dbd921ccae8'
        #     )], 
        #     github_tokens[0]
        # )

        repo_file_list = load_pickle(f'{self.repo_data_path}/repo_file_list.pkl')
        # multi_thread(random.sample(list(to_scrapy_list), 10), get_gt_file_sub, tokens = github_tokens)
        multi_thread(list(to_scrapy_list), get_gt_file_sub, tokens = github_tokens)

        save_json(f'{self.repo_data_path}/repo_file_list.json', repo_file_list)
        save_pickle(f'{self.repo_data_path}/repo_file_list.pkl', repo_file_list)