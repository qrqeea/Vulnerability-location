import os
from util import load_pickle, save_pickle, copy_file, save_text


def filter_cve_list():
    # 68565 cve with vulnerable components
    path = 'experiment_data/all/combined_vul_component_clean_correct_pure_nvd.pkl'
    data = load_pickle(path)
    a = set(data.keys())

    # 9435 cve (groundtruth data)
    path = 'experiment_data/all/cleaned_gt_commit_single_v2.pkl'
    data = load_pickle(path)
    b = set([item[0] for item in data.keys()])
    for item in b.copy():
        if '.' in item:
            b.remove(item)  # 四个重复数据：CVE-2016-9840 - CVE-2016-9843

    # print(len(a))           # 68565
    # print(len(b))           # 9017
    # print(len(a & b))       # 4429
    cve_list = b - a & b      
    # print(len(cve_list))    # 4588
    
    return cve_list


def filter_json_file(cve_list: list, cur_path: str, target_path):
    for file in os.listdir(cur_path):
        if file in ['delta.json', 'deltaLog.json']:
            continue

        fullPath = os.path.join(cur_path, file)
        # print(fullPath)
        if os.path.isdir(fullPath):
            filter_json_file(cve_list, fullPath, target_path)
            continue
        fileWithoutExtension = file.split('.')[0]
        # print(fileWithNotExtension)
        if fileWithoutExtension in cve_list:
            copy_file(fullPath, f'{target_path}/{file}')


def filter_datasets(save_to_file):
    if os.path.exists(save_to_file):
        return load_pickle(f'{save_to_file}.pkl')

    cve_list = filter_cve_list()
    cve_json_path = 'experiment_data/all/cvelist/cves'
    target_path = 'experiment_data/4571/cve_metadata'
    filter_json_file(cve_list, cve_json_path, target_path)

    new_cve_list = [file.split('.')[0] for file in os.listdir(target_path)]
    # print(len(set(new_cve_list)))
    # print(len(set(cve_list)))
    # print(set(cve_list) - set(new_cve_list))    # 有17个找不到json文件的CVE，剩余4571个

    if save_to_file:
        save_text(save_to_file, new_cve_list)
        save_pickle(f'{save_to_file}.pkl', new_cve_list)

    return new_cve_list


if __name__ == '__main__':
    filter_datasets(save_to_file = 'experiment_data/4571/cve_list')