import requests
from bs4 import BeautifulSoup

def generate_prompt(url: str):
    if 'errata' in url:
        return generate_prompt_errata(url)
    else:
        from prompt_generator import common
        return common.generate_prompt(url)

def generate_prompt_errata(url: str):

    prompt = '''
I will give you some information about a software vulnerability. The information includes these parts: synopsis, topic, description, solution, affected products and fixes. Note that some parts may not exist. You need to extract the valuable parts from the information. The focus is on the information section describing the vulnerability.\n'''[1:]

    res = requests.get(url)
    soup = BeautifulSoup(res.text, 'html.parser')

    info = soup.find(name = 'div', attrs = {
        'id' : 'synpopsis',
    })
    if info != None:
        # print(info.text)
        prompt += info.text

    info = soup.find(name = 'div', attrs = {
        'id' : 'topic',
    })
    if info != None:
        # print(info.text)
        prompt += info.text

    info = soup.find(name = 'div', attrs = {
        'id' : 'description',
    })
    if info != None:
        # print(info.text)
        prompt += info.text

    info = soup.find(name = 'div', attrs = {
        'id' : 'affected_products',
    })
    if info != None:
        # print(info.text)
        prompt += info.text

    info = soup.find(name = 'div', attrs = {
        'id' : 'fixes',
    })
    if info != None:
        # print(info.text)
        prompt += info.text
    
    return prompt


if __name__ == '__main__':
    url = 'https://access.redhat.com/errata/RHSA-2017:2918'
    prompt = generate_prompt(url)
    if prompt != None:
        with open('./prompt_template/prompt_test/access.redhat.com', 'w') as f:
            print(prompt, file = f)