import requests
from bs4 import BeautifulSoup

def generate_prompt(url: str):
    if 'archives' in url:
        return generate_prompt_archives(url)
    else:
        from prompt_generator import common
        return common.generate_prompt(url)

def generate_prompt_archives(url: str):
    
    prompt = '''
I will give you some information about the content of posts discussing software vulnerabilities. The information includes these parts: title and post content. followed by {Title} and {Post} respectively. You need to extract the valuable parts from the information. The focus is on the information section describing the vulnerability. If the content section contains insufficient information to extract valuable details about the vulnerability, the output should be "no results".\n\n'''[1:]

    res = requests.get(url)
    soup = BeautifulSoup(res.text, 'html.parser')

    info = soup.find(name = 'div', attrs = {
        'class' : 'col-tn-10',
    })
    if info != None:
        # print(info.text)
        prompt += '{Title}:\n' + info.text + '\n'

    info = soup.find(name = 'div', attrs = {
        'class' : 'email-body',
    })
    if info != None:
        # print(info.text)
        prompt += '{Post}:' + info.text
    
    prompt += '''
Atenetion: If the content section contains insufficient information to extract valuable details about the vulnerability, the output should be "no results". Do not output redundant prompt information, only output "no results".'''

    return prompt

if __name__ == '__main__':
    url = 'https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TXRVXNRFHJSQWFHPRJQRI5UPMZ63B544/'
    prompt = generate_prompt(url)
    if prompt != None:
        with open('./prompt_template/prompt_test/lists.fedoraproject.org', 'w') as f:
            print(prompt, file = f)