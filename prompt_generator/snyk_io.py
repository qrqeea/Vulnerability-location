import requests
from bs4 import BeautifulSoup

def handleText(input):
    # 以换行符为分隔符，将字符串分割成行
    lines = input.split('\n')

    # 去除每行前后的空格，并过滤掉空行
    stripped_lines = [line.strip() for line in lines if line.strip()]

    # 将处理后的内容合并为一个字符串
    result = ' '.join(stripped_lines)
    return result


def generate_prompt(url: str):
    if 'io/vuln' in url:
        return generate_prompt_vuln(url)
    else:
        from prompt_generator import common
        return common.generate_prompt(url)

def generate_prompt_vuln(url: str):

    prompt = '''
I will give you some information about a software vulnerability. The information includes these parts: title, how to fix, overview and details, followed by {Title}, {How to fix}, {Overview} and {Details} respectively. Note that some parts may not exist. You need to extract the valuable parts from the information. The focus is on the information section describing the vulnerability.\n\n'''[1:]

    res = requests.get(url)
    soup = BeautifulSoup(res.text, 'html.parser')

    info = soup.find(name = 'h1', attrs = {
        'class' : 'vue--heading title',
    })
    if info != None:
        # print(handleText(info.text))
        prompt += '{Title}:\n' + handleText(info.text) + '\n\n'

    titles = ['{How to fix}:\n', '{Overview}:\n', '{Details}:\n']
    info = soup.findAll(name = 'div', attrs = {
        'class' : 'vue--markdown-to-html markdown-description',
    })

    if info != None:
        for index, item in enumerate(info):
            if index > 2:
                break
            # print(item.text)
            # print('---------------------------------------------')
            prompt += titles[index] + item.text + '\n'
    
    return prompt

if __name__ == '__main__':
    url = 'https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1019353'
    prompt = generate_prompt(url)
    if prompt != None:
        with open('./prompt_template/prompt_test/snyk.io', 'w') as f:
            print(prompt, file = f)